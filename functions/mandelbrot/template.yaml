AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: SAM template for Mandelbrot function for my website

Parameters:
  StageName:
    Type: String
    Default: Prod
    Description: Name of API stage.
    AllowedValues:
      - Prod
  Architecture:
    Type: String
    Default: x86_64 # ARM architecture (e.g., M-series Mac)
    Description: Architecture of the Lambda function.
    AllowedValues:
      - x86_64
      - arm64

Globals:
  Api:
    Cors:
      AllowMethods: "'POST,OPTIONS'"
      AllowHeaders: "'*'" # TODO: Is this a good idea?
      AllowOrigin: "'*'" # TODO: Try to allow only from my website?
      AllowCredentials: false
  Function:
    Architectures:
      - !Ref Architecture
    Timeout: 29 # Seconds; 29s is the API Gateway timeout!

Resources:
  ServerlessRestApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Sub "${StageName}"
      Auth:
        ApiKeyRequired: true

  MeadMandelbrotFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: "A lambda that generates an image from the Mandelbrot Set."
      PackageType: Image
      Events:
        MeadMandelbrot:
          Type: Api
          Properties:
            Path: /mandelbrot
            Method: POST
            Auth:
              ApiKeyRequired: true
      MemorySize: 10240
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: .

  ServerlessUsagePlan:
    Type: AWS::ApiGateway::UsagePlan
    Properties:
      UsagePlanName: MandelbrotUsagePlan
      Description: Usage plan for this API
      Quota:
        Limit: 25
        Period: DAY
      Throttle:
        BurstLimit: 10
        RateLimit: 1 # Requests per second
      ApiStages:
        - ApiId: !Ref ServerlessRestApi # Enforces a dependency on this resource so that infrastructure is deployed in order!
          Stage: !Sub "${StageName}"

Outputs:
  MeadMandelbrotApi:
    Description: "API Gateway endpoint URL for Mead Mandelbrot function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/${StageName}"
